//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DORIS.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DDTrack_SandBoxEntities : DbContext
    {
        public DDTrack_SandBoxEntities()
            : base("name=DDTrack_SandBoxEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<User> Users { get; set; }
    
        public virtual int loginUser(string userID, string password, string supplier, ObjectParameter token)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("loginUser", userIDParameter, passwordParameter, supplierParameter, token);
        }
    
        public virtual ObjectResult<tp_getSummary_Result> tp_getSummary(string supplierCode)
        {
            var supplierCodeParameter = supplierCode != null ?
                new ObjectParameter("SupplierCode", supplierCode) :
                new ObjectParameter("SupplierCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tp_getSummary_Result>("tp_getSummary", supplierCodeParameter);
        }
    
        public virtual ObjectResult<getOrderStatus_Result> getOrderStatus(string supplierCode, string orderStatus, ObjectParameter count, ObjectParameter returnCode)
        {
            var supplierCodeParameter = supplierCode != null ?
                new ObjectParameter("SupplierCode", supplierCode) :
                new ObjectParameter("SupplierCode", typeof(string));
    
            var orderStatusParameter = orderStatus != null ?
                new ObjectParameter("OrderStatus", orderStatus) :
                new ObjectParameter("OrderStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getOrderStatus_Result>("getOrderStatus", supplierCodeParameter, orderStatusParameter, count, returnCode);
        }
    
        public virtual ObjectResult<getUserDetails_Result> getUserDetails(string hashValue, ObjectParameter validUser)
        {
            var hashValueParameter = hashValue != null ?
                new ObjectParameter("HashValue", hashValue) :
                new ObjectParameter("HashValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getUserDetails_Result>("getUserDetails", hashValueParameter, validUser);
        }
    
        public virtual int createSuperUser(Nullable<int> currentUserID, string userName, ObjectParameter rC, ObjectParameter errorMessage)
        {
            var currentUserIDParameter = currentUserID.HasValue ?
                new ObjectParameter("CurrentUserID", currentUserID) :
                new ObjectParameter("CurrentUserID", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("createSuperUser", currentUserIDParameter, userNameParameter, rC, errorMessage);
        }
    
        public virtual int usr_addUser(Nullable<long> userID, string userName, string supplierCode, string fullName, ObjectParameter rC, ObjectParameter errorMessage)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var supplierCodeParameter = supplierCode != null ?
                new ObjectParameter("SupplierCode", supplierCode) :
                new ObjectParameter("SupplierCode", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usr_addUser", userIDParameter, userNameParameter, supplierCodeParameter, fullNameParameter, rC, errorMessage);
        }
    
        public virtual ObjectResult<usr_getUser_Result> usr_getUser(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usr_getUser_Result>("usr_getUser", userIDParameter);
        }
    
        public virtual ObjectResult<usr_getUsers_Result> usr_getUsers(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usr_getUsers_Result>("usr_getUsers", userIDParameter);
        }
    
        public virtual int usr_updateUser(Nullable<int> currentUserID, Nullable<int> userID, string userName, string supplierCode, string fullName, ObjectParameter rC, ObjectParameter errorMessage)
        {
            var currentUserIDParameter = currentUserID.HasValue ?
                new ObjectParameter("CurrentUserID", currentUserID) :
                new ObjectParameter("CurrentUserID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var supplierCodeParameter = supplierCode != null ?
                new ObjectParameter("SupplierCode", supplierCode) :
                new ObjectParameter("SupplierCode", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usr_updateUser", currentUserIDParameter, userIDParameter, userNameParameter, supplierCodeParameter, fullNameParameter, rC, errorMessage);
        }
    
        public virtual int setPassword(Nullable<long> userID, string password)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("setPassword", userIDParameter, passwordParameter);
        }
    }
}
