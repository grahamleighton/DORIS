//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DORIS.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DDTrack_SandBoxEntities : DbContext
    {
        public DDTrack_SandBoxEntities()
            : base("name=DDTrack_SandBoxEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<User> Users { get; set; }
    
        public virtual int loginUser(string userID, string password, string supplier, ObjectParameter token)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("loginUser", userIDParameter, passwordParameter, supplierParameter, token);
        }
    
        public virtual ObjectResult<tp_getSummary_Result> tp_getSummary(string supplierCode)
        {
            var supplierCodeParameter = supplierCode != null ?
                new ObjectParameter("SupplierCode", supplierCode) :
                new ObjectParameter("SupplierCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tp_getSummary_Result>("tp_getSummary", supplierCodeParameter);
        }
    
        public virtual ObjectResult<getOrderStatus_Result> getOrderStatus(string supplierCode, string orderStatus, ObjectParameter count, ObjectParameter returnCode)
        {
            var supplierCodeParameter = supplierCode != null ?
                new ObjectParameter("SupplierCode", supplierCode) :
                new ObjectParameter("SupplierCode", typeof(string));
    
            var orderStatusParameter = orderStatus != null ?
                new ObjectParameter("OrderStatus", orderStatus) :
                new ObjectParameter("OrderStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getOrderStatus_Result>("getOrderStatus", supplierCodeParameter, orderStatusParameter, count, returnCode);
        }
    
        public virtual ObjectResult<getUserDetails_Result> getUserDetails(string hashValue, ObjectParameter validUser)
        {
            var hashValueParameter = hashValue != null ?
                new ObjectParameter("HashValue", hashValue) :
                new ObjectParameter("HashValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getUserDetails_Result>("getUserDetails", hashValueParameter, validUser);
        }
    }
}
